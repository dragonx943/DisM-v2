const {GuildMember, ApplicationCommandOptionType} = require('discord.js');
const {QueueRepeatMode} = require('discord-player');

module.exports = {
  name: 'loop',
  description: 'T√πy ch·ªânh ch·∫ø ƒë·ªô l·∫∑p l·∫°i.',
  options: [
    {
      name: 'mode',
      type: ApplicationCommandOptionType.Integer,
      description: 'Ch·ªçn ki·ªÉu l·∫∑p l·∫°i.',
      required: true,
      choices: [
        {
          name: 'Off',
          value: QueueRepeatMode.OFF,
        },
        {
          name: 'Track',
          value: QueueRepeatMode.TRACK,
        },
        {
          name: 'Queue',
          value: QueueRepeatMode.QUEUE,
        },
        {
          name: 'Autoplay',
          value: QueueRepeatMode.AUTOPLAY,
        },
      ],
    },
  ],
  async execute(interaction, player) {
    try {
      if (!(interaction.member instanceof GuildMember) || !interaction.member.voice.channel) {
        return void interaction.reply({
          content: 'B·∫°n kh√¥ng tham gia b·∫•t k√¨ k√™nh tho·∫°i n√†o, b√£i b·ªè vi·ªác th·ª±c thi c√¢u l·ªánh! | Mem64: K√™nh tho·∫°i v·∫Øng!',
          ephemeral: true,
        });
      }

      if (
        interaction.guild.members.me.voice.channelId &&
        interaction.member.voice.channelId !== interaction.guild.members.me.voice.channelId
      ) {
        return void interaction.reply({
          content: 'B·∫Øt bu·ªôc: B·∫°n ph·∫£i chung k√™nh tho·∫°i v·ªõi Bot! | Mem64: Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng t·∫°i k√™nh tho·∫°i!',
          ephemeral: true,
        });
      }

      await interaction.deferReply();

      const queue = player.getQueue(interaction.guildId);
      if (!queue || !queue.playing) {
        return void interaction.followUp({content: 'B·∫Øt bu·ªôc: Ph·∫£i c√≥ √≠t nh·∫•t 1 b√†i ƒëang ƒë∆∞·ª£c ph√°t t·ª´ h√†ng ch·ªù! | Mem64i: ‚ùå'});
      }

      const loopMode = interaction.options.getInteger('mode');
      const success = queue.setRepeatMode(loopMode);
      const mode = loopMode === QueueRepeatMode.TRACK ? 'üîÇ' : loopMode === QueueRepeatMode.QUEUE ? 'üîÅ' : '‚ñ∂';

      return void interaction.followUp({
        content: success ? `ƒê√£ c·∫≠p nh·∫≠t ch·∫ø ƒë·ªô l·∫∑p l·∫°i! | Mem64i: ${mode}` : 'Kh√¥ng c√≥ s·ª± thay ƒë·ªïi trong ch·∫ø ƒë·ªô l·∫∑p l·∫°i, b√£i b·ªè c√¢u l·ªánh. | Mem64i: ‚ùå',
      });
    } catch (error) {
      console.log(error);
      interaction.followUp({
        content: 'ƒê√£ c√≥ l·ªói x·∫£y ra khi Bot ƒëang c·ªë g·∫Øng th·ª±c thi c√¢u l·ªánh: ' + error.message,
      });
    }
  },
};
